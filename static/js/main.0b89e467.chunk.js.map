{"version":3,"sources":["models/OverviewModel.js","models/WellnessModel.js","models/WorkInterfereModel.js","models/BenefitsModel.js","models/MentalVSPhysicalModel.js","models/LeaveModel.js","controller/dataController.js","components/FilterList.js","components/FilterSlider.js","components/OverviewChart.js","components/OverviewTable.js","Home.js","Details.js","App.js","serviceWorker.js","index.js"],"names":["OverviewModel","country","entries","genderMale","genderFemale","genderUnknow","ageUp20","ageUp40","ageUp60","ageMore60","familyMentalIllness","treatment","dispose","WellnessModel","wellness_program","mental_health_consequence","WorkInterfereModel","care_options","tech_company","BenefitsModel","benefits_yes","benefits_no","benefits_dontknow","MentalVSPhysicalModel","mental_vs_physical_yes","mental_vs_physical_no","mental_vs_physical_dontknow","LeaveModel","leave_easy","leave_very_easy","leave_difficult","leave_very_difficult","leave_dontknow","objToArray","obj","converted","key","singleObj","push","Object","objectSpread","toBool","str","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","JSONhealthData","healthData","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","console","log","stop","apply","this","arguments","normalizeOverviewData","data","minimalEntries","normalized","forEach","e","gender","age","family_history","summatory","defineGenderGroup","defineAgeGroup","defineFamilyIllnessGroup","defineTreatmentGroup","dataToReturn","dataBycountry","toLowerCase","FilterList","_this$props","props","options","statuses","handleToggle","react_default","createElement","List","map","value","label","checked","labelId","concat","ListItem","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","tabIndex","inputProps","aria-labelledby","ListItemText","id","primary","React","Component","FilterSlider","onUpdate","Fragment","Slider","className","min","max","step","onChange","event","style","marginLeft","textAlign","filterOptions","OverviewChart","state","dataChart","filters","familyHistory","minEntries","setState","_this2","updateDataSourceMapping","_this3","_this$state","Grid","container","spacing","item","xs","FilterList_FilterList","FilterSlider_FilterSlider","updateMinEnties","height","es6","width","margin","top","right","bottom","left","stroke","dataKey","type","name","fill","barSize","stackId","OverviewTable","rows","Table","TableHead","TableRow","TableCell","align","TableBody","row","Math","random","component","scope","Home","loading","LinearProgress","OverviewChart_OverviewChart","Container","fixed","OverviewTable_OverviewTable","possibleCountries","canada","uk","usa","limitPossibleEmployees","Details","employeesGroup","getSelectedCountriesArray","_this","selectedCountries","renderBarChart","title","datasource","elements","strokeDasharray","countries","filter","includes","filterByCountries","employees","no_employees","filterDataByEmployees","filteredData","getDataFiltered","wellnessResults","byCountry","Wellness","wellnessComparison","interfereResults","WorkInterfere","workInterfereComparison","benefitsResults","Benefits","benefits","benefitsComparison","healthVSPhysicalResults","MentalVSPhysical","mental_vs_physical","healthVSPhysicalComparison","leaveResults","Leave","leave","leaveComparison","wellnessElements","interfereElements","benefitsElements","mentalVsPhysicalElements","leaveElements","padding","Select","autoWidth","target","MenuItem","defaultRoute","limit","fetchRemoteData","fetched","slice","selectedData","sliceData","react_router_dom","AppBar","position","color","Toolbar","Typography","itemStyle","variant","to","react_router","exact","path","Home_Home","Details_Details","Boolean","window","location","hostname","match","ReactDOM","render","App_defaultRoute","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b89e467.chunk.js","sourcesContent":["export default {\n    country: '',\n    entries: 0,\n    genderMale: 0,\n    genderFemale: 0,\n    genderUnknow: 0,\n    ageUp20: 0,\n    ageUp40: 0,\n    ageUp60: 0,\n    ageMore60: 0,\n    familyMentalIllness: 0,\n    treatment: 0,\n    dispose: 0,\n}","export default {\n    country: '',\n    wellness_program: 0,\n    mental_health_consequence: 0,\n}","export default {\n    country: '',\n    care_options: 0,\n    tech_company: 0,\n}","export default {\n    country: '',\n    benefits_yes: 0,\n    benefits_no: 0,\n    benefits_dontknow: 0,\n}","export default {\n    country: '',\n    mental_vs_physical_yes: 0,\n    mental_vs_physical_no: 0,\n    mental_vs_physical_dontknow: 0,\n}","export default {\n    country: '',\n    leave_easy: 0,\n    leave_very_easy: 0,\n    leave_difficult: 0,\n    leave_very_difficult: 0,\n    leave_dontknow: 0,\n}","import OverviewModel from '../models/OverviewModel'\nimport Wellness from '../models/WellnessModel'\nimport WorkInterfere from '../models/WorkInterfereModel'\nimport Benefits from '../models/BenefitsModel'\nimport MentalVSPhysical from '../models/MentalVSPhysicalModel'\nimport Leave from '../models/LeaveModel'\n\nconst serviceEndpoint = 'https://cartelito.s3.us-east-2.amazonaws.com/health_data.json'\n\nconst objToArray = obj => {\n  const converted = []\n  for (const key in obj) {\n    let singleObj = obj[key]\n    converted.push({ ...singleObj })\n  }\n  return converted\n}\n\nconst toBool = str => {\n  return str === 'Yes'\n}\n\n\nexport const fetchData = async () => {\n  try {\n    const JSONhealthData = await fetch(serviceEndpoint)\n    const healthData = await JSONhealthData.json()\n\n    return healthData\n  } catch(err) {\n    // Handle this\n    console.log('Something broke while fetching data', err)\n  }\n}\n\n\nexport const normalizeOverviewData = (data, minimalEntries) => {\n  const normalized = {}\n  data.forEach(e => {\n    const { country, gender, age, family_history, treatment, } = e\n    if (!normalized[country]) {\n      normalized[country] = { ...OverviewModel, country, }\n    }\n    const summatory = normalized[country]\n\n    summatory.entries += 1\n    summatory[defineGenderGroup(gender)] += 1\n    summatory[defineAgeGroup(age)] += 1\n    summatory[defineFamilyIllnessGroup(family_history)] += 1\n    summatory[defineTreatmentGroup(treatment)] += 1\n  })\n\n  const dataToReturn = []\n  for (const key in normalized) {\n    let dataBycountry = normalized[key]\n    if (dataBycountry.entries > minimalEntries)\n      dataToReturn.push({ ...dataBycountry })\n  }\n\n  return dataToReturn\n}\n\n\nexport const wellnessComparison = data => {\n  const byCountry = {}\n\n  data.forEach(e => {\n    if (!byCountry[e.country]) {\n      byCountry[e.country] = { ...Wellness }\n    }\n\n    const summatory = byCountry[e.country]\n    summatory.country = e.country\n    summatory.wellness_program += e.wellness_program === 'Yes' ? 1 : 0\n    summatory.mental_health_consequence += e.mental_health_consequence === 'Yes' ? 1 : 0\n  })\n\n  return objToArray(byCountry)\n}\n\nexport const workInterfereComparison = data => {\n  const byCountry = {}\n\n  data.forEach(e => {\n    if (!byCountry[e.country]) {\n      byCountry[e.country] = { ...WorkInterfere }\n    }\n\n    const summatory = byCountry[e.country]\n    summatory.country = e.country\n    summatory.care_options += e.care_options === 'Yes' ? 1 : 0\n    summatory.tech_company += e.tech_company === 'Yes' ? 1 : 0\n  })\n\n  return objToArray(byCountry)\n}\n\nexport const benefitsComparison = data => {\n  const byCountry = {}\n\n  data.forEach(e => {\n    if (!byCountry[e.country]) {\n      byCountry[e.country] = { ...Benefits }\n    }\n\n    const summatory = byCountry[e.country]\n    summatory.country = e.country\n    summatory.benefits_yes += e.benefits === 'Yes' ? 1 : 0\n    summatory.benefits_no += e.benefits === 'No' ? 1 : 0\n    summatory.benefits_dontknow += e.benefits === 'Don\\'t Know' ? 1 : 0\n  })\n\n  return objToArray(byCountry)\n}\n\nexport const healthVSPhysicalComparison = data => {\n  const byCountry = {}\n\n  data.forEach(e => {\n    if (!byCountry[e.country]) {\n      byCountry[e.country] = { ...MentalVSPhysical }\n    }\n\n    const summatory = byCountry[e.country]\n    summatory.country = e.country\n    summatory.mental_vs_physical_yes += e.mental_vs_physical === 'Yes' ? 1 : 0\n    summatory.mental_vs_physical_no += e.mental_vs_physical === 'No' ? 1 : 0\n    summatory.mental_vs_physical_dontknow += e.mental_vs_physical === 'Don\\'t Know' ? 1 : 0\n  })\n  return objToArray(byCountry)\n}\n\nexport const leaveComparison = data => {\n  const byCountry = {}\n\n  data.forEach(e => {\n    if (!byCountry[e.country]) {\n      byCountry[e.country] = { ...Leave }\n    }\n\n    const summatory = byCountry[e.country]\n    summatory.country = e.country\n    summatory.leave_easy += e.leave === 'Somewhat easy' ? 1 : 0\n    summatory.leave_very_easy += e.leave === 'Very easy' ? 1 : 0\n    summatory.leave_difficult += e.leave === 'Somewhat difficult' ? 1 : 0\n    summatory.leave_very_difficult += e.leave === 'Very difficult' ? 1 : 0\n    summatory.leave_dontknow += e.leave === 'Don\\'t know' ? 1 : 0\n  })\n\n  return objToArray(byCountry)\n}\n\n\n\nexport const filterByCountries = (data, countries) => {\n  return data.filter(e => countries.includes(e.country))\n}\n\nexport const filterDataByEmployees = (data, employees) => {\n  return data.filter(e => e.no_employees === employees)\n}\n\n\n\nexport const defineGenderGroup = gender => {\n  switch (gender.toLowerCase()) {\n    case 'm':\n    case 'male':\n      return 'genderMale'\n    case 'f':\n    case 'female':\n      return 'genderFemale'\n    default:\n      return 'genderUnknow'\n  }\n}\n\nexport const defineAgeGroup = age => {\n  if (age > 60) {\n    return 'ageMore60'\n  }\n  if (age > 40) {\n    return 'ageUp60'\n  }\n  if (age > 20) {\n    return 'ageUp40'\n  }\n  return 'ageUp20'\n}\n\nexport const defineFamilyIllnessGroup = family_history => {\n  return toBool(family_history)\n    ? 'familyMentalIllness'\n    : 'dispose'\n}\n\nexport const defineTreatmentGroup = treatment => {\n  return toBool(treatment)\n    ? 'treatment'\n    : 'dispose'\n}","import React from 'react'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n\nexport default class FilterList extends React.Component {\n  render() {\n    const { options, statuses, handleToggle, } = this.props\n\n    return <List>\n      {options.map(value => {\n        const { key, label, } = value\n        const checked = statuses[key]\n        const labelId = `checkbox-list-label-${key}`\n\n        return (\n          <ListItem key={`list-${key}`} role={undefined} dense button onClick={() => handleToggle(key)}>\n            <ListItemIcon>\n              <Checkbox\n                checked={checked}\n                tabIndex={-1}\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={label} />\n          </ListItem>\n        )\n      })}\n    </List>\n  }\n}","import React from 'react'\nimport Slider from '@material-ui/lab/Slider'\n\n\nexport default class FilterSlider extends React.Component {\n    render() {\n        const { value, onUpdate, } = this.props\n\n        return (<>\n            <Slider\n                className={'slider'}\n                value={value}\n                min={0}\n                max={45}\n                step={3}\n                onChange={(event, value) => onUpdate(value)}\n                style={{ marginLeft: 30 }}\n            />\n            <div style={{ textAlign: 'center' }}>\n                Minimum entries: {value}\n            </div>\n            </>\n        )\n    }\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport {\n  ResponsiveContainer, ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts'\n\nimport { normalizeOverviewData } from '../controller/dataController'\nimport FilterList from './FilterList'\nimport FilterSlider from './FilterSlider'\n\nconst filterOptions = [\n  {\n    key: 'entries',\n    label: 'Entries count',\n  },\n  {\n    key: 'age',\n    label: 'Age',\n  },\n  {\n    key: 'gender',\n    label: 'Gender',\n  },\n  {\n    key: 'familyHistory',\n    label: 'Family history of mental illnesses',\n  },\n  {\n    key: 'treatment',\n    label: 'Treatment sought for a mental health condition',\n  },\n]\n\nexport default class OverviewChart extends React.Component {\n  state = {\n    dataChart: [],\n    filters: {\n      entries: true,\n      age: true,\n      gender: true,\n      treatment: true,\n      familyHistory: true,\n    },\n    minEntries: 42,\n  }\n\n  handleToggle(value) {\n    const { filters } = this.state\n    filters[value] = !filters[value]\n    this.setState({ filters })\n  }\n\n  updateMinEnties(minEntries) {\n    this.setState({ minEntries }, () => this.updateDataSourceMapping())\n  }\n\n  updateDataSourceMapping() {\n    const { data } = this.props\n    const { minEntries } = this.state\n    this.setState({ dataChart: normalizeOverviewData(data, minEntries) })\n  }\n\n  componentDidMount() {\n    this.updateDataSourceMapping()\n  }\n\n  render() {\n    const { dataChart, filters, minEntries, } = this.state\n\n    return (\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <div style={{ marginLeft: 30 }}>\n            <h4>Filters</h4>\n          </div>\n          <FilterList\n            options={filterOptions}\n            statuses={this.state.filters}\n            handleToggle={(key) => this.handleToggle(key)}\n          />\n          <FilterSlider\n            value={minEntries}\n            onUpdate={value => this.updateMinEnties(value)}\n          />\n        </Grid>\n        <Grid item xs={9}>\n          <div style={{ height: 400 }}>\n            <ResponsiveContainer>\n              <ComposedChart\n                width={500}\n                height={400}\n                data={dataChart}\n                margin={{\n                  top: 10, right: 10, bottom: 10, left: 10,\n                }}\n              >\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <XAxis dataKey=\"country\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                {filters.entries && <Area type=\"monotone\" name=\"Entries count\" dataKey=\"entries\" fill=\"#8884d8\" stroke=\"#8884d8\" />}\n                {filters.age && <Bar barSize={100} stackId=\"age\" name=\"Up to 20 years\" dataKey=\"ageUp20\" fill=\"#669900\" />}\n                {filters.age && <Bar barSize={100} stackId=\"age\" name=\"Up to 40 years\" dataKey=\"ageUp40\" fill=\"#009933\" />}\n                {filters.age && <Bar barSize={100} stackId=\"age\" name=\"Up to 60 years\" dataKey=\"ageUp60\" fill=\"#006600\" />}\n                {filters.age && <Bar barSize={100} stackId=\"age\" name=\"More than 60 years\" dataKey=\"ageMore60\" fill=\"#0000cc\" />}\n                {filters.familyHistory && <Bar barSize={75} name=\"Family Mental Illness\" dataKey=\"familyMentalIllness\" fill=\"#669999\" />}\n                {filters.treatment && <Bar barSize={75} name=\"In treatment\" dataKey=\"treatment\" fill=\"#ff9900\" />}\n                {filters.gender && <Line type=\"monotone\" name=\"Males\" dataKey=\"genderMale\" stroke=\"#3366ff\" />}\n                {filters.gender && <Line type=\"monotone\" name=\"Females\" dataKey=\"genderFemale\" stroke=\"#ff6699\" />}\n                {filters.gender && <Line type=\"monotone\" name=\"Other gender\" dataKey=\"genderUnknow\" stroke=\"#9999ff\" />}\n              </ComposedChart>\n            </ResponsiveContainer>\n          </div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React from 'react'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\n\nexport default class OverviewTable extends React.Component {\n  render() {\n    const { data } = this.props\n    const rows = data\n\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell align=\"right\">Gender</TableCell>\n            <TableCell align=\"right\">Age</TableCell>\n            <TableCell align=\"right\">Family History</TableCell>\n            <TableCell align=\"right\">Treatment</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            rows.map(row => (\n              <TableRow key={Math.random()}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.country}\n                </TableCell>\n                <TableCell align=\"right\">{row.gender}</TableCell>\n                <TableCell align=\"right\">{row.age}</TableCell>\n                <TableCell align=\"right\">{row.family_history}</TableCell>\n                <TableCell align=\"right\">{row.treatment}</TableCell>\n              </TableRow>\n            ))\n          }\n        </TableBody>\n      </Table>\n    )\n  }\n}\n","import React from 'react'\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport OverviewChart from './components/OverviewChart'\nimport OverviewTable from './components/OverviewTable'\n\nexport default class Home extends React.Component {\n  render() {\n    const { loading, data, } = this.props\n\n    if (loading) {\n      return <LinearProgress />\n    }\n\n    return <>\n      <OverviewChart data={data} />\n      <hr/>\n      <Container fixed>\n        <OverviewTable data={data} />\n      </Container>\n    </>\n  }\n}","import React from 'react'\n\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Grid from '@material-ui/core/Grid'\nimport Select from '@material-ui/core/Select'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nimport {\n  ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts'\n\nimport {\n  benefitsComparison,\n  workInterfereComparison,\n  wellnessComparison,\n  healthVSPhysicalComparison,\n  leaveComparison,\n  filterDataByEmployees,\n  filterByCountries,\n} from './controller/dataController'\n\nimport FilterList from './components/FilterList'\n\nconst filterOptions = [\n  {\n    key: 'canada',\n    label: 'Canada',\n  },\n  {\n    key: 'uk',\n    label: 'UK',\n  },\n  {\n    key: 'usa',\n    label: 'USA',\n  },\n]\n\nconst possibleCountries = {\n  canada: 'Canada',\n  uk: 'United Kingdom',\n  usa: 'United States',\n}\n\nconst limitPossibleEmployees = [\n  '1-5',\n  '6-25',\n  '26-100',\n  '100-500',\n  '500-1000',\n  'More than 1000',\n]\n\nexport default class Details extends React.Component {\n  state = {\n    employeesGroup: limitPossibleEmployees[0],\n    filters: {\n      canada: true,\n      uk: true,\n      usa: true,\n    }\n  }\n\n  handleToggle(value) {\n    const { filters } = this.state\n    filters[value] = !filters[value]\n    this.setState({ filters })\n  }\n\n  getSelectedCountriesArray = () => {\n    const { filters } = this.state\n    const selectedCountries = []\n    for (const key in filters) {\n      if (filters[key]) {\n        selectedCountries.push(possibleCountries[key])\n      }\n    }\n    return selectedCountries\n  }\n\n  getDataFiltered() {\n    const { data, } = this.props\n    const { employeesGroup, } = this.state\n\n    const selectedCountries = this.getSelectedCountriesArray()\n\n    const dataEmployeesGrouped = filterDataByEmployees(data, employeesGroup)\n    const countriesFiltered = filterByCountries(dataEmployeesGrouped, selectedCountries)\n\n    return countriesFiltered\n  }\n\n  renderBarChart = (title, datasource, elements) => {\n    return (\n      <div style={{ height: 400 }}>\n        <div style={{ marginLeft: 30 }}>\n          <h5>{title}</h5>\n        </div>\n        <ResponsiveContainer>\n          <BarChart\n            width={500}\n            height={300}\n            data={datasource}\n            margin={{\n              top: 5, right: 30, left: 20, bottom: 5,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"country\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            {elements}\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n\n  render() {\n    const { loading, } = this.props\n    const { employeesGroup, } = this.state\n\n    const filteredData = this.getDataFiltered()\n    const wellnessResults = wellnessComparison(filteredData)\n    const interfereResults = workInterfereComparison(filteredData)\n    const benefitsResults = benefitsComparison(filteredData)\n    const healthVSPhysicalResults = healthVSPhysicalComparison(filteredData)\n    const leaveResults = leaveComparison(filteredData)\n\n    const wellnessElements = [\n      <Bar dataKey=\"wellness_program\" key=\"wellness_program\" name=\"Companies with wellness program\" fill=\"#8884d8\" />,\n      <Bar dataKey=\"mental_health_consequence\" key=\"mental_health_consequence\" name=\"Companies with mental health consequence\" fill=\"#f46b42\" />,\n    ]\n\n    const interfereElements = [\n      <Bar dataKey=\"care_options\" key=\"care_options\" name=\"Have care options\" fill=\"#bfa35d\" />,\n      <Bar dataKey=\"tech_company\" key=\"tech_company\" name=\"Tech Companies\" fill=\"#5d81bf\" />,\n    ]\n\n    const benefitsElements = [\n      <Bar dataKey=\"benefits_yes\" key=\"benefits_yes\" name=\"Yes\" fill=\"#5dbf85\" />,\n      <Bar dataKey=\"benefits_no\" key=\"benefits_no\" name=\"No\" fill=\"#bf5d96\" />,\n      <Bar dataKey=\"benefits_dontknow\" key=\"benefits_dontknow\" name=\"Don't know\" fill=\"#54499b\" />,\n    ]\n\n    const mentalVsPhysicalElements = [\n      <Bar dataKey=\"mental_vs_physical_yes\" key=\"mental_vs_physical_yes\" name=\"Yes\" fill=\"#499b4a\" />,\n      <Bar dataKey=\"mental_vs_physical_no\" key=\"mental_vs_physical_no\" name=\"No\" fill=\"#9b497f\" />,\n      <Bar dataKey=\"mental_vs_physical_dontknow\" key=\"mental_vs_physical_dontknow\" name=\"Don't know\" fill=\"#52499b\" />,\n    ]\n\n    const leaveElements = [\n      <Bar dataKey=\"leave_very_easy\" key=\"leave_very_easy\" name=\"Very easy\" fill=\"#82ca9d\" />,\n      <Bar dataKey=\"leave_easy\" key=\"leave_easy\" name=\"Somewhat easy\" fill=\"#99d1ff\" />,\n      <Bar dataKey=\"leave_difficult\" key=\"leave_difficult\" name=\"Somewhat difficult\" fill=\"#d18306\" />,\n      <Bar dataKey=\"leave_very_difficult\" key=\"leave_very_difficult\" name=\"Very difficult\" fill=\"#d12406\" />,\n      <Bar dataKey=\"leave_dontknow\" key=\"leave_dontknow\" name=\"Don't know\" fill=\"#ffc658\" />,\n    ]\n\n    if (loading) {\n      return <LinearProgress />\n    }\n\n    return <>\n      <FilterList\n        options={filterOptions}\n        statuses={this.state.filters}\n        handleToggle={(key) => this.handleToggle(key)}\n      />\n      <div className={'company-size'} style={{ padding: 10 }}>\n        <label>Company size:</label>\n        <Select\n          value={employeesGroup}\n          autoWidth={true}\n          onChange={e => this.setState({ employeesGroup: e.target.value })}\n        >\n          {limitPossibleEmployees.map(e => <MenuItem key={e} value={e}>{e}</MenuItem>)}\n        </Select>\n      </div>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          {this.renderBarChart('Wellness Program vs Mental Health Consquence', wellnessResults, wellnessElements)}\n        </Grid>\n        <Grid item xs={4}>\n          {this.renderBarChart('Do you know the options for mental health care your employer provides (Tech)', interfereResults, interfereElements)}\n        </Grid>\n        <Grid item xs={4}>\n          {this.renderBarChart('Employeer have Mental Health benefits plan?', benefitsResults, benefitsElements)}\n        </Grid>\n        <Grid item xs={4}>\n          {this.renderBarChart('Employer takes mental health as seriously as physical health?', healthVSPhysicalResults, mentalVsPhysicalElements)}\n        </Grid>\n        <Grid item xs={4}>\n          {this.renderBarChart('Is easy for you to take medical leave for a mental health condition?', leaveResults, leaveElements)}\n        </Grid>\n      </Grid>\n    </>\n  }\n}","import React from 'react'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nimport Home from './Home'\nimport Details from './Details'\n\nimport { fetchData, } from './controller/dataController'\n\nexport default class defaultRoute extends React.Component {\n  state = {\n    data: [],\n    limit: 'All',\n    loading: true,\n  }\n\n  async componentDidMount() {\n    this.fetchRemoteData()\n  }\n\n  async fetchRemoteData() {\n    const fetched = await fetchData()\n    this.setState({ data: fetched, loading: false, })\n  }\n\n  sliceData(limit) {\n    const { data } = this.state\n    return limit === 'All'\n      ? data\n      : data.slice(Math.max(0, limit))\n  }\n\n  render() {\n    const { limit, loading, } = this.state\n    const limitPossibles = [ 100, 500, 'All', ]\n    const selectedData = this.sliceData(limit)\n\n    return (\n      <Router>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography style={itemStyle} variant=\"h6\" color=\"inherit\">\n              <Link to=\"/\">Home</Link>\n            </Typography>\n            <Typography style={itemStyle} variant=\"h6\" color=\"inherit\">\n              <Link to=\"/details\">Details</Link>\n            </Typography>\n            <Typography style={itemStyle} variant=\"h6\" color=\"inherit\">\n              <Select\n                value={limit}\n                autoWidth={true}\n                onChange={e => this.setState({ limit: e.target.value })}\n              >\n              {limitPossibles.map(e => <MenuItem key={e} value={e}>{e}</MenuItem> )}\n              </Select>\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Route exact path=\"/\" component={() => <Home limit={limit} data={selectedData} loading={loading} />} />\n        <Route path=\"/details\" component={() => <Details limit={limit} data={selectedData} loading={loading} />} />\n      </Router>\n    )\n  }\n}\n\nconst itemStyle = {\n  marginLeft: 50\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}